# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9, 3.11]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8
#          pip install -r tests/requirements.txt
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: flake
        run: |
            python -m pip install --upgrade pip
            pip install flake8
            pip install flake8-html
            flake8 ./src/main.py --format=html --htmldir=flake-report --exit-zero

      - name: Upload test summary
        uses: actions/upload-artifact@v3
        with:
          name: test-summary
          path: ./flake-report/
        if: always()

#      - name: wemake-python-styleguide
#        uses: wemake-services/wemake-python-styleguide@0.18.0
##        continue-on-error: true
#        with:
#          reporter: 'terminal'



#
#      - name: "telegram Notification"
#        uses: "appleboy/telegram-action@master"
#        with:
#          to: ${{ secrets.TELEGRAM_CHAT_ID }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          args: finish ${{ github.run_id }}


